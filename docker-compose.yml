services:
  postgres:
    image: postgres:16-alpine
    container_name: romulus-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-romulus}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-romulus}
      POSTGRES_DB: ${POSTGRES_DB:-romulus}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U romulus"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: romulus-api
    command: uvicorn main:app --host 0.0.0.0 --port ${BACKEND_PORT:-8000} --reload
    ports:
      - "${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql+asyncpg://romulus:romulus@postgres:5432/romulus}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - DEBUG=${DEBUG:-false}
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - __pycache__/
            - .venv/
            - .pytest_cache/
            - "*.pyc"
        - action: rebuild
          path: ./backend/pyproject.toml

volumes:
  postgres_data: